'use client';

import React, { useState } from 'react';
import { MagnifyingGlassIcon, SparklesIcon, CalendarIcon, MapPinIcon, ClockIcon } from '@heroicons/react/24/outline';
import { useLanguage } from '@/hooks/useLanguage';
import { translations } from '@/translations';
import AISearch from './AISearch';
import SearchResults from './SearchResults';

interface SearchFilters {
  category: string;
  startDate: string;
  endDate: string;
  startPoint: string;
  endPoint: string;
  duration: string;
  priceRange: string;
  difficulty: string;
}

interface SearchResult {
  id: number;
  type: string;
  title: string;
  description: string;
  image: string;
  price: number;
  duration: string;
  difficulty: string;
  startPoint: string;
  endPoint: string;
  startDate: string;
  endDate: string;
  rating: number;
  reviews: number;
  ecoRating: number;
}

export default function SearchSection() {
  const { language } = useLanguage();
  const t = translations[language];
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [showFilters, setShowFilters] = useState(false);
  const [filters, setFilters] = useState<SearchFilters>({
    category: '',
    startDate: '',
    endDate: '',
    startPoint: '',
    endPoint: '',
    duration: '',
    priceRange: '',
    difficulty: ''
  });

  const handleSearch = async (query: string, additionalFilters?: any) => {
    console.log('üîç –ü–æ–∏—Å–∫ –∑–∞–ø—É—â–µ–Ω:', { query, additionalFilters });
    setIsLoading(true);
    setSearchQuery(query);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Å API
    const mockResults = [
      {
        id: 1,
        type: 'tour',
        title: language === 'ru' ? '–¢—Ä–µ–∫–∫–∏–Ω–≥ –≤ –≥–æ—Ä–∞—Ö –ê–ª–º–∞—Ç—ã' : 'Trekking in Almaty Mountains',
        description: language === 'ru'
          ? '–î–≤—É—Ö–¥–Ω–µ–≤–Ω—ã–π –ø–æ—Ö–æ–¥ –ø–æ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –≥–∏–¥–æ–º –∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º –æ–±—É—á–µ–Ω–∏–µ–º'
          : 'Two-day hike through scenic routes with professional guide and environmental education',
        image: '/guide.jpg',
        price: 45000,
        duration: '2 –¥–Ω—è',
        difficulty: '–°—Ä–µ–¥–Ω—è—è',
        startPoint: '–ê–ª–º–∞—Ç—ã',
        endPoint: '–ê–ª–º–∞—Ç—ã',
        startDate: '2024-08-15',
        endDate: '2024-08-16',
        rating: 4.8,
        reviews: 24,
        ecoRating: 4.9
      },
      {
        id: 2,
        type: 'tour',
        title: language === 'ru' ? '–≠–∫–æ-—Ç—É—Ä –ø–æ –æ–∑–µ—Ä–∞–º' : 'Eco-tour around lakes',
        description: language === 'ru'
          ? '–¢—Ä–µ—Ö–¥–Ω–µ–≤–Ω—ã–π —Ç—É—Ä –ø–æ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–º –æ–∑–µ—Ä–∞–º —Å –Ω–æ—á–µ–≤–∫–æ–π –≤ —ç–∫–æ-–¥–æ–º–∏–∫–∞—Ö'
          : 'Three-day tour around scenic lakes with overnight stays in eco-lodges',
        image: '/equipment.jpg',
        price: 65000,
        duration: '3 –¥–Ω—è',
        difficulty: '–õ–µ–≥–∫–∞—è',
        startPoint: '–ê—Å—Ç–∞–Ω–∞',
        endPoint: '–ê—Å—Ç–∞–Ω–∞',
        startDate: '2024-08-20',
        endDate: '2024-08-22',
        rating: 4.6,
        reviews: 18,
        ecoRating: 4.7
      }
    ];
    
    console.log('üìã –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', mockResults.length);
    setSearchResults(mockResults);
    setIsLoading(false);
  };

  const handleSuggestionSelect = (suggestion: any) => {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ AI-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    if (suggestion.category) {
      setFilters(prev => ({ ...prev, category: suggestion.category }));
    }
  };

  const handleFilterChange = (key: string, value: string) => {
    setFilters(prev => ({ ...prev, [key]: value }));
  };

  const handleDateChange = (type: 'start' | 'end', value: string) => {
    if (type === 'start') {
      setFilters(prev => ({ ...prev, startDate: value }));
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É —á–µ—Ä–µ–∑ –¥–µ–Ω—å
      if (value) {
        const endDate = new Date(value);
        endDate.setDate(endDate.getDate() + 1);
        setFilters(prev => ({ 
          ...prev, 
          endDate: endDate.toISOString().split('T')[0] 
        }));
      }
    } else {
      setFilters(prev => ({ ...prev, endDate: value }));
    }
  };

  const clearFilters = () => {
    setFilters({
      category: '',
      startDate: '',
      endDate: '',
      startPoint: '',
      endPoint: '',
      duration: '',
      priceRange: '',
      difficulty: ''
    });
  };

  return (
    <div className="space-y-6">
      {/* AI-–ø–æ–∏—Å–∫ */}
      <AISearch 
        onSearch={handleSearch}
        onSuggestionSelect={handleSuggestionSelect}
        isLoading={isLoading}
      />

      {/* –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-800">
            –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
          </h3>
          <button
            onClick={() => setShowFilters(!showFilters)}
            className="text-blue-600 hover:text-blue-700 text-sm font-medium"
          >
            {showFilters ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'} —Ñ–∏–ª—å—Ç—Ä—ã
          </button>
        </div>

        {showFilters && (
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö–∞—Ç–µ–≥–æ—Ä–∏—è
              </label>
              <select
                value={filters.category}
                onChange={(e) => handleFilterChange('category', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              >
                <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                <option value="tour">–¢—É—Ä—ã</option>
                <option value="accommodation">–†–∞–∑–º–µ—â–µ–Ω–∏–µ</option>
                <option value="transport">–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç</option>
                <option value="guide">–ì–∏–¥—ã</option>
                <option value="equipment">–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ</option>
              </select>
            </div>

            {/* –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <CalendarIcon className="inline w-4 h-4 mr-1" />
                –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞
              </label>
              <input
                type="date"
                value={filters.startDate}
                onChange={(e) => handleDateChange('start', e.target.value)}
                min={new Date().toISOString().split('T')[0]}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              />
            </div>

            {/* –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <CalendarIcon className="inline w-4 h-4 mr-1" />
                –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è
              </label>
              <input
                type="date"
                value={filters.endDate}
                onChange={(e) => handleDateChange('end', e.target.value)}
                min={filters.startDate || new Date().toISOString().split('T')[0]}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              />
            </div>

            {/* –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <MapPinIcon className="inline w-4 h-4 mr-1" />
                –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞
              </label>
              <input
                type="text"
                value={filters.startPoint}
                onChange={(e) => handleFilterChange('startPoint', e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–ª–º–∞—Ç—ã"
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              />
            </div>

            {/* –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <MapPinIcon className="inline w-4 h-4 mr-1" />
                –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞
              </label>
              <input
                type="text"
                value={filters.endPoint}
                onChange={(e) => handleFilterChange('endPoint', e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê—Å—Ç–∞–Ω–∞"
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              />
            </div>

            {/* –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                <ClockIcon className="inline w-4 h-4 mr-1" />
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
              </label>
              <select
                value={filters.duration}
                onChange={(e) => handleFilterChange('duration', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              >
                <option value="">–õ—é–±–∞—è</option>
                <option value="1">1 –¥–µ–Ω—å</option>
                <option value="2">2 –¥–Ω—è</option>
                <option value="3">3 –¥–Ω—è</option>
                <option value="4">4 –¥–Ω—è</option>
                <option value="5">5 –¥–Ω–µ–π</option>
                <option value="6">6 –¥–Ω–µ–π</option>
                <option value="7">7 –¥–Ω–µ–π</option>
                <option value="8+">8+ –¥–Ω–µ–π</option>
              </select>
            </div>

            {/* –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω
              </label>
              <select
                value={filters.priceRange}
                onChange={(e) => handleFilterChange('priceRange', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              >
                <option value="">–õ—é–±–∞—è —Ü–µ–Ω–∞</option>
                <option value="0-25000">–î–æ 25,000 ‚Ç∏</option>
                <option value="25000-50000">25,000 - 50,000 ‚Ç∏</option>
                <option value="50000-100000">50,000 - 100,000 ‚Ç∏</option>
                <option value="100000-200000">100,000 - 200,000 ‚Ç∏</option>
                <option value="200000+">–û—Ç 200,000 ‚Ç∏</option>
              </select>
            </div>

            {/* –°–ª–æ–∂–Ω–æ—Å—Ç—å */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –°–ª–æ–∂–Ω–æ—Å—Ç—å
              </label>
              <select
                value={filters.difficulty}
                onChange={(e) => handleFilterChange('difficulty', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
              >
                <option value="">–õ—é–±–∞—è</option>
                <option value="easy">–õ–µ–≥–∫–∞—è</option>
                <option value="medium">–°—Ä–µ–¥–Ω—è—è</option>
                <option value="hard">–°–ª–æ–∂–Ω–∞—è</option>
                <option value="expert">–≠–∫—Å–ø–µ—Ä—Ç</option>
              </select>
            </div>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex items-center gap-3 mt-6 pt-4 border-t border-gray-200">
          <button
            onClick={() => handleSearch(searchQuery || '—Ç—É—Ä—ã', filters)}
            disabled={isLoading}
            className="flex items-center gap-2 px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <SparklesIcon className="w-4 h-4" />
            {isLoading ? '–ü–æ–∏—Å–∫...' : '–ù–∞–π—Ç–∏ —Ç—É—Ä—ã'}
          </button>
          
          <button
            onClick={() => handleSearch('—Ç–µ—Å—Ç', filters)}
            className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm"
          >
            –¢–µ—Å—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
          </button>
          
          <button
            onClick={clearFilters}
            className="px-4 py-2 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50"
          >
            –û—á–∏—Å—Ç–∏—Ç—å
          </button>
        </div>
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
      {searchResults.length > 0 && (
        <div>
          <div className="mb-4 p-2 bg-blue-50 rounded text-sm text-blue-700">
            üîç –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {searchResults.length}
          </div>
          <SearchResults 
            results={searchResults}
            searchQuery={searchQuery}
          />
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
      {searchQuery && searchResults.length === 0 && !isLoading && (
        <div className="text-center py-8">
          <div className="text-gray-500 mb-2">–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
          <div className="text-sm text-gray-400">
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
          </div>
        </div>
      )}
    </div>
  );
} 