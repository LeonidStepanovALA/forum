'use client';

import React, { useState } from 'react';
import { SparklesIcon, CalendarIcon, MapPinIcon, ClockIcon } from '@heroicons/react/24/outline';
import { useLanguage } from '@/hooks/useLanguage';
// import { translations } from '@/translations';
import AISearch from './AISearch';
import SearchResults from './SearchResults';

interface SearchFilters {
  category: string;
  startDate: string;
  endDate: string;
  startPoint: string;
  endPoint: string;
  duration: string;
  priceRange: string;
  difficulty: string;
}

interface SearchResult {
  id: number;
  type: string;
  title: string;
  description: string;
  image: string;
  price: number;
  duration: string;
  difficulty: string;
  startPoint: string;
  endPoint: string;
  startDate: string;
  endDate: string;
  rating: number;
  reviews: number;
  ecoRating: number;
}

export default function SearchSection() {
  const { language } = useLanguage();
  // const t = translations[language];
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState<SearchResult[]>([]);
  const [isLoading, setIsLoading] = useState(false);
  const [showFilters, setShowFilters] = useState(true);
  const [filters, setFilters] = useState<SearchFilters>({
    category: '',
    startDate: '',
    endDate: '',
    startPoint: '',
    endPoint: '',
    duration: '',
    priceRange: '',
    difficulty: ''
  });

  const handleSearch = async (query: string, additionalFilters?: unknown) => {
    console.log(language === 'ru' ? 'üîç –ü–æ–∏—Å–∫ –∑–∞–ø—É—â–µ–Ω:' : 'üîç Search started:', { query, additionalFilters });
    setIsLoading(true);
    setSearchQuery(query);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ —Å API
    const mockResults = [
      {
        id: 1,
        type: 'tour',
        title: language === 'ru' ? '–¢—Ä–µ–∫–∫–∏–Ω–≥ –≤ –≥–æ—Ä–∞—Ö –ê–ª–º–∞—Ç—ã' : 'Trekking in Almaty Mountains',
        description: language === 'ru'
          ? '–î–≤—É—Ö–¥–Ω–µ–≤–Ω—ã–π –ø–æ—Ö–æ–¥ –ø–æ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –≥–∏–¥–æ–º –∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º –æ–±—É—á–µ–Ω–∏–µ–º'
          : 'Two-day hike through scenic routes with professional guide and environmental education',
        image: '/guide.jpg',
        price: 45000,
        duration: language === 'ru' ? '2 –¥–Ω—è' : '2 days',
        difficulty: language === 'ru' ? '–°—Ä–µ–¥–Ω—è—è' : 'Medium',
        startPoint: language === 'ru' ? '–ê–ª–º–∞—Ç—ã' : 'Almaty',
        endPoint: language === 'ru' ? '–ê–ª–º–∞—Ç—ã' : 'Almaty',
        startDate: '2024-08-15',
        endDate: '2024-08-16',
        rating: 4.8,
        reviews: 24,
        ecoRating: 4.9
      },
      {
        id: 2,
        type: 'tour',
        title: language === 'ru' ? '–≠–∫–æ-—Ç—É—Ä –ø–æ –æ–∑–µ—Ä–∞–º' : 'Eco-tour around lakes',
        description: language === 'ru'
          ? '–¢—Ä–µ—Ö–¥–Ω–µ–≤–Ω—ã–π —Ç—É—Ä –ø–æ –∂–∏–≤–æ–ø–∏—Å–Ω—ã–º –æ–∑–µ—Ä–∞–º —Å –Ω–æ—á–µ–≤–∫–æ–π –≤ —ç–∫–æ-–¥–æ–º–∏–∫–∞—Ö'
          : 'Three-day tour around scenic lakes with overnight stays in eco-lodges',
        image: '/equipment.jpg',
        price: 65000,
        duration: language === 'ru' ? '3 –¥–Ω—è' : '3 days',
        difficulty: language === 'ru' ? '–õ–µ–≥–∫–∞—è' : 'Easy',
        startPoint: language === 'ru' ? '–ê—Å—Ç–∞–Ω–∞' : 'Astana',
        endPoint: language === 'ru' ? '–ê—Å—Ç–∞–Ω–∞' : 'Astana',
        startDate: '2024-08-20',
        endDate: '2024-08-22',
        rating: 4.6,
        reviews: 18,
        ecoRating: 4.7
      }
    ];
    
    console.log(language === 'ru' ? 'üìã –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:' : 'üìã Results found:', mockResults.length);
    setSearchResults(mockResults);
    setIsLoading(false);
  };

  const handleSuggestionSelect = () => {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ AI-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
    // if (suggestion.category) {
    //   setFilters(prev => ({ ...prev, category: suggestion.category }));
    // }
  };

  const handleFilterChange = (key: string, value: string) => {
    setFilters(prev => ({ ...prev, [key]: value }));
  };

  const handleDateChange = (type: 'start' | 'end', value: string) => {
    if (type === 'start') {
      setFilters(prev => ({ ...prev, startDate: value }));
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É —á–µ—Ä–µ–∑ –¥–µ–Ω—å
      if (value) {
        const endDate = new Date(value);
        endDate.setDate(endDate.getDate() + 1);
        setFilters(prev => ({ 
          ...prev, 
          endDate: endDate.toISOString().split('T')[0] 
        }));
      }
    } else {
      setFilters(prev => ({ ...prev, endDate: value }));
    }
  };

  const clearFilters = () => {
    setFilters({
      category: '',
      startDate: '',
      endDate: '',
      startPoint: '',
      endPoint: '',
      duration: '',
      priceRange: '',
      difficulty: ''
    });
  };

  return (
    <div className="space-y-6">
      {/* AI-–ø–æ–∏—Å–∫ */}
      <AISearch 
        onSearch={handleSearch}
        onSuggestionSelect={handleSuggestionSelect}
        isLoading={isLoading}
      />

      {/* –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-800">
{language === 'ru' ? '–§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞' : 'Search Filters'}
          </h3>
          <button
            onClick={() => setShowFilters(!showFilters)}
            className="text-blue-600 hover:text-blue-700 text-sm font-medium"
          >
{showFilters ? (language === 'ru' ? '–°–∫—Ä—ã—Ç—å' : 'Hide') : (language === 'ru' ? '–ü–æ–∫–∞–∑–∞—Ç—å' : 'Show')} {language === 'ru' ? '—Ñ–∏–ª—å—Ç—Ä—ã' : 'filters'}
          </button>
          </div>

        {/* –§–∏–ª—å—Ç—Ä—ã */}
        {showFilters && (
          <div className="mt-4 p-4 bg-gray-50 rounded-lg">
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
              {/* –ö–∞—Ç–µ–≥–æ—Ä–∏—è */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
{language === 'ru' ? '–ö–∞—Ç–µ–≥–æ—Ä–∏—è' : 'Category'}
              </label>
              <select
                  value={filters.category}
                  onChange={(e) => handleFilterChange('category', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                >
                  <option value="">{language === 'ru' ? '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' : 'All categories'}</option>
                  <option value="trekking">{language === 'ru' ? '–¢—Ä–µ–∫–∫–∏–Ω–≥' : 'Trekking'}</option>
                  <option value="cycling">{language === 'ru' ? '–í–µ–ª–æ—Ç—É—Ä—ã' : 'Cycling Tours'}</option>
                  <option value="water">{language === 'ru' ? '–í–æ–¥–Ω—ã–µ —Ç—É—Ä—ã' : 'Water Tours'}</option>
                  <option value="cultural">{language === 'ru' ? '–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ —Ç—É—Ä—ã' : 'Cultural Tours'}</option>
                  <option value="heritage">{language === 'ru' ? '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ' : 'Cultural Heritage'}</option>
                  <option value="wildlife">{language === 'ru' ? '–ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –¥–∏–∫–æ–π –ø—Ä–∏—Ä–æ–¥–æ–π' : 'Wildlife Watching'}</option>
              </select>
            </div>

              {/* –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  <CalendarIcon className="inline w-4 h-4 mr-1" />
{language === 'ru' ? '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞' : 'Start Date'}
                </label>
                <input
                  type="date"
                  value={filters.startDate}
                  onChange={(e) => handleDateChange('start', e.target.value)}
                  min={new Date().toISOString().split('T')[0]}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                />
              </div>

              {/* –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  <CalendarIcon className="inline w-4 h-4 mr-1" />
{language === 'ru' ? '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è' : 'End Date'}
                </label>
                <input
                  type="date"
                  value={filters.endDate}
                  onChange={(e) => handleDateChange('end', e.target.value)}
                  min={filters.startDate || new Date().toISOString().split('T')[0]}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                />
              </div>

              {/* –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  <MapPinIcon className="inline w-4 h-4 mr-1" />
{language === 'ru' ? '–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞' : 'Start Point'}
                </label>
                <input
                  type="text"
                  value={filters.startPoint}
                  onChange={(e) => handleFilterChange('startPoint', e.target.value)}
                  placeholder={language === 'ru' ? '–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–ª–º–∞—Ç—ã' : 'e.g. Almaty'}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                />
              </div>

              {/* –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                  <MapPinIcon className="inline w-4 h-4 mr-1" />
{language === 'ru' ? '–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞' : 'End Point'}
              </label>
                <input
                  type="text"
                  value={filters.endPoint}
                  onChange={(e) => handleFilterChange('endPoint', e.target.value)}
                  placeholder={language === 'ru' ? '–ù–∞–ø—Ä–∏–º–µ—Ä: –ê—Å—Ç–∞–Ω–∞' : 'e.g. Astana'}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                />
            </div>

              {/* –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  <ClockIcon className="inline w-4 h-4 mr-1" />
{language === 'ru' ? '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å' : 'Duration'}
                </label>
                <select
                  value={filters.duration}
                  onChange={(e) => handleFilterChange('duration', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                >
                  <option value="">{language === 'ru' ? '–õ—é–±–∞—è' : 'Any'}</option>
                  <option value="1">1 {language === 'ru' ? '–¥–µ–Ω—å' : 'day'}</option>
                  <option value="2">2 {language === 'ru' ? '–¥–Ω—è' : 'days'}</option>
                  <option value="3">3 {language === 'ru' ? '–¥–Ω—è' : 'days'}</option>
                  <option value="4">4 {language === 'ru' ? '–¥–Ω—è' : 'days'}</option>
                  <option value="5">5 {language === 'ru' ? '–¥–Ω–µ–π' : 'days'}</option>
                  <option value="6">6 {language === 'ru' ? '–¥–Ω–µ–π' : 'days'}</option>
                  <option value="7">7 {language === 'ru' ? '–¥–Ω–µ–π' : 'days'}</option>
                  <option value="8+">8+ {language === 'ru' ? '–¥–Ω–µ–π' : 'days'}</option>
                </select>
              </div>

              {/* –¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω */}
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
{language === 'ru' ? '–¶–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω' : 'Price Range'}
              </label>
              <select
                  value={filters.priceRange}
                  onChange={(e) => handleFilterChange('priceRange', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                >
                  <option value="">{language === 'ru' ? '–õ—é–±–∞—è —Ü–µ–Ω–∞' : 'Any price'}</option>
                  <option value="0-25000">{language === 'ru' ? '–î–æ 25,000 ‚Ç∏' : 'Up to 25,000 ‚Ç∏'}</option>
                  <option value="25000-50000">25,000 - 50,000 ‚Ç∏</option>
                  <option value="50000-100000">50,000 - 100,000 ‚Ç∏</option>
                  <option value="100000-200000">100,000 - 200,000 ‚Ç∏</option>
                  <option value="200000+">{language === 'ru' ? '–û—Ç 200,000 ‚Ç∏' : 'From 200,000 ‚Ç∏'}</option>
              </select>
            </div>

              {/* –°–ª–æ–∂–Ω–æ—Å—Ç—å */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
{language === 'ru' ? '–°–ª–æ–∂–Ω–æ—Å—Ç—å' : 'Difficulty'}
                </label>
                <select
                  value={filters.difficulty}
                  onChange={(e) => handleFilterChange('difficulty', e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent text-sm"
                >
                  <option value="">{language === 'ru' ? '–õ—é–±–∞—è' : 'Any'}</option>
                  <option value="easy">{language === 'ru' ? '–õ–µ–≥–∫–∞—è' : 'Easy'}</option>
                  <option value="medium">{language === 'ru' ? '–°—Ä–µ–¥–Ω—è—è' : 'Medium'}</option>
                  <option value="hard">{language === 'ru' ? '–°–ª–æ–∂–Ω–∞—è' : 'Hard'}</option>
                  <option value="expert">{language === 'ru' ? '–≠–∫—Å–ø–µ—Ä—Ç' : 'Expert'}</option>
              </select>
            </div>
          </div>
        </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <div className="flex flex-col sm:flex-row items-stretch sm:items-center gap-3 mt-6 pt-4 border-t border-gray-200">
          <button
            onClick={() => handleSearch(searchQuery || '—Ç—É—Ä—ã', filters)}
            disabled={isLoading}
            className="flex items-center justify-center gap-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed text-sm sm:text-base"
          >
            <SparklesIcon className="w-4 h-4" />
{isLoading ? (language === 'ru' ? '–ü–æ–∏—Å–∫...' : 'Searching...') : (language === 'ru' ? '–ù–∞–π—Ç–∏ —Ç—É—Ä—ã' : 'Find Tours')}
          </button>

        <button 
            onClick={clearFilters}
            className="px-4 py-3 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg hover:bg-gray-50 text-sm"
          >
{language === 'ru' ? '–û—á–∏—Å—Ç–∏—Ç—å' : 'Clear'}
        </button>
        </div>
      </div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
      {searchResults.length > 0 && (
        <div>
          <div className="mb-4 p-2 bg-blue-50 rounded text-sm text-blue-700">
            üîç {language === 'ru' ? '–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤' : 'Results found'}: {searchResults.length}
          </div>
          <SearchResults 
            results={searchResults}
            searchQuery={searchQuery}
          />
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
      {searchQuery && searchResults.length === 0 && !isLoading && (
        <div className="text-center py-8">
          <div className="text-gray-500 mb-2">{language === 'ru' ? '–ü–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' : 'No results found for your query'}</div>
          <div className="text-sm text-gray-400">
            {language === 'ru' ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞' : 'Try changing search parameters or using different keywords'}
          </div>
        </div>
      )}
    </div>
  );
} 