'use client';

import React, { useState, useRef } from 'react';
import { PhoneIcon, ExclamationTriangleIcon, BellAlertIcon, CameraIcon, XMarkIcon } from '@heroicons/react/24/outline';
import { useLanguage } from '@/hooks/useLanguage';

export default function EmergencyContact() {
  const { language } = useLanguage();
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [description, setDescription] = useState('');
  const [photo, setPhoto] = useState<File | null>(null);
  const [photoPreview, setPhotoPreview] = useState<string | null>(null);
  // const [location, setLocation] = useState<{lat: number, lng: number} | null>(null);
  const [isGettingLocation, setIsGettingLocation] = useState(false);
  const fileInputRef = useRef<HTMLInputElement>(null);

  const emergencyContacts = [
    {
      id: 1,
      title: language === 'ru' ? '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–ª—É–∂–±–∞' : 'Emergency Service',
      phone: '112',
      description: language === 'ru' ? '–ï–¥–∏–Ω—ã–π –Ω–æ–º–µ—Ä —Å–ª—É–∂–±—ã —Å–ø–∞—Å–µ–Ω–∏—è' : 'Unified rescue service number'
    },
    {
      id: 2,
      title: language === 'ru' ? '–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è —ç–∫–æ-—Ç—É—Ä–∏–∑–º–∞' : 'Eco-tourism Hotline',
      phone: '8-800-123-45-67',
      description: language === 'ru' ? '–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ç—É—Ä–∏—Å—Ç–æ–≤' : '24/7 tourist support'
    },
    {
      id: 3,
      title: language === 'ru' ? '–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å' : 'Medical Assistance',
      phone: '103',
      description: language === 'ru' ? '–°–∫–æ—Ä–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –ø–æ–º–æ—â—å' : 'Emergency medical assistance'
    }
  ];

  const getCurrentLocation = (): Promise<{lat: number, lng: number}> => {
    return new Promise((resolve, reject) => {
      if (!navigator.geolocation) {
        reject(new Error(language === 'ru' ? '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' : 'Geolocation not supported'));
        return;
      }

      navigator.geolocation.getCurrentPosition(
        (position) => {
          resolve({
            lat: position.coords.latitude,
            lng: position.coords.longitude
          });
        },
        (error) => {
          reject(error);
        },
        {
          enableHighAccuracy: true,
          timeout: 5000,
          maximumAge: 60000
        }
      );
    });
  };

  const handleEmergencyReport = () => {
    setIsModalOpen(true);
  };

  const handlePhotoChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      setPhoto(file);
      const reader = new FileReader();
      reader.onload = (e) => {
        setPhotoPreview(e.target?.result as string);
      };
      reader.readAsDataURL(file);
    }
  };

  const handleSubmit = async () => {
    setIsGettingLocation(true);
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
      const coords = await getCurrentLocation();
      // setLocation(coords);
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      const message = `üö® ${language === 'ru' ? 'SOS –°–ò–ì–ù–ê–õ!' : 'SOS SIGNAL!'}
      
üìç ${language === 'ru' ? '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã' : 'Coordinates'}: ${coords.lat.toFixed(6)}, ${coords.lng.toFixed(6)}
üìù ${language === 'ru' ? '–û–ø–∏—Å–∞–Ω–∏–µ' : 'Description'}: ${description || (language === 'ru' ? '–ù–µ —É–∫–∞–∑–∞–Ω–æ' : 'Not specified')}
üì∏ ${language === 'ru' ? '–§–æ—Ç–æ' : 'Photo'}: ${photo ? (language === 'ru' ? '–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ' : 'Attached') : (language === 'ru' ? '–ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ' : 'Not attached')}

‚è∞ ${language === 'ru' ? '–í—Ä–µ–º—è' : 'Time'}: ${new Date().toLocaleString(language === 'ru' ? 'ru-RU' : 'en-US')}

${language === 'ru' ? '–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∞ –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.' : 'Support service has been notified and will contact you shortly.'}`;

      alert(message);
      
    } catch {
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –Ω–∏—Ö
      const message = `üö® ${language === 'ru' ? 'SOS –°–ò–ì–ù–ê–õ!' : 'SOS SIGNAL!'}
      
‚ö†Ô∏è ${language === 'ru' ? '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã' : 'Coordinates'}: ${language === 'ru' ? '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å' : 'Could not obtain'}
üìù ${language === 'ru' ? '–û–ø–∏—Å–∞–Ω–∏–µ' : 'Description'}: ${description || (language === 'ru' ? '–ù–µ —É–∫–∞–∑–∞–Ω–æ' : 'Not specified')}
üì∏ ${language === 'ru' ? '–§–æ—Ç–æ' : 'Photo'}: ${photo ? (language === 'ru' ? '–ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ' : 'Attached') : (language === 'ru' ? '–ù–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–æ' : 'Not attached')}

‚è∞ ${language === 'ru' ? '–í—Ä–µ–º—è' : 'Time'}: ${new Date().toLocaleString(language === 'ru' ? 'ru-RU' : 'en-US')}

${language === 'ru' ? '–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∞ –∏ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.' : 'Support service has been notified and will contact you shortly.'}`;

      alert(message);
    } finally {
      setIsGettingLocation(false);
      
      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
      setDescription('');
      setPhoto(null);
      setPhotoPreview(null);
      // setLocation(null);
      setIsModalOpen(false);
    }
  };

  const handleCancel = () => {
    setDescription('');
    setPhoto(null);
    setPhotoPreview(null);
    // setLocation(null);
    setIsModalOpen(false);
  };

  return (
    <div className="bg-white rounded-lg shadow-md p-6">
      <div className="flex items-center gap-3 mb-6">
        <ExclamationTriangleIcon className="w-6 h-6 text-red-600" />
        <h3 className="text-xl font-semibold text-gray-800">
          {language === 'ru' ? '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è —Å–≤—è–∑—å' : 'Emergency Contact'}
        </h3>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ - –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞ –≤–≤–µ—Ä—Ö */}
      <div className="mb-6">
        <button
          onClick={handleEmergencyReport}
          className="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-4 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center gap-3 shadow-lg hover:shadow-xl"
        >
          <BellAlertIcon className="w-6 h-6" />
          <span className="text-lg">{language === 'ru' ? '–°–æ–æ–±—â–∏—Ç—å –æ–± —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏' : 'Report Emergency Situation'}</span>
        </button>
        <p className="text-sm text-gray-600 mt-2 text-center">
          {language === 'ru' ? '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–µ–¥–æ–º–∏—Ç—å —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏' : 'Click the button above to notify support service about an emergency situation'}
        </p>
      </div>

      <div className="space-y-4">
        {emergencyContacts.map((contact) => (
          <div
            key={contact.id}
            className="flex items-start gap-4 p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors"
          >
            <div className="bg-red-100 p-2 rounded-full">
              <PhoneIcon className="w-5 h-5 text-red-600" />
            </div>
            
            <div className="flex-grow">
              <h4 className="font-medium text-gray-900">
                {contact.title}
              </h4>
              <p className="text-gray-600 text-sm mt-1">
                {contact.description}
              </p>
              <a
                href={`tel:${contact.phone}`}
                className="inline-flex items-center gap-2 mt-2 text-red-600 hover:text-red-700 font-medium"
              >
                <span>{contact.phone}</span>
              </a>
            </div>
          </div>
        ))}
      </div>

      <div className="mt-6 p-4 bg-red-50 rounded-lg">
        <p className="text-sm text-red-700">
          {language === 'ru' ? '–í —Å–ª—É—á–∞–µ —á—Ä–µ–∑–≤—ã—á–∞–π–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–º–∏ —Å–ª—É–∂–±–∞–º–∏. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –Ω–æ–º–µ—Ä–∞ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.' : 'In case of emergency, immediately contact emergency services. Save these numbers in your phone for quick access.'}
        </p>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –æ–± —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ */}
      {isModalOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white rounded-lg shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto">
            <div className="flex items-center justify-between p-6 border-b">
              <h3 className="text-lg font-semibold text-gray-900">
                {language === 'ru' ? '–°–æ–æ–±—â–∏—Ç—å –æ–± —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏' : 'Report Emergency Situation'}
              </h3>
              <button
                onClick={handleCancel}
                className="text-gray-400 hover:text-gray-600"
              >
                <XMarkIcon className="w-6 h-6" />
              </button>
            </div>

            <div className="p-6 space-y-4">
              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö */}
              <div className="p-3 bg-blue-50 rounded-lg">
                <p className="text-sm text-blue-700">
                  üìç {language === 'ru' ? '–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SOS –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –≤–∞—à–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è' : 'When sending SOS, your location coordinates will be automatically transmitted'}
                </p>
              </div>

              {/* –§–æ—Ç–æ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {language === 'ru' ? '–§–æ—Ç–æ —Å–∏—Ç—É–∞—Ü–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)' : 'Situation Photo (optional)'}
                </label>
                <div className="flex items-center gap-4">
                  <button
                    onClick={() => fileInputRef.current?.click()}
                    className="flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                  >
                    <CameraIcon className="w-5 h-5" />
                    <span>{language === 'ru' ? '–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ' : 'Take Photo'}</span>
                  </button>
                  <input
                    ref={fileInputRef}
                    type="file"
                    accept="image/*"
                    onChange={handlePhotoChange}
                    className="hidden"
                  />
                </div>
                {photoPreview && (
                  <div className="mt-3">
                    {/* <img
                      src={photoPreview}
                      alt="Preview"
                      className="w-full h-32 object-cover rounded-lg border"
                    /> */}
                  </div>
                )}
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  {language === 'ru' ? '–û–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)' : 'Situation Description (optional)'}
                </label>
                <textarea
                  value={description}
                  onChange={(e) => setDescription(e.target.value)}
                  placeholder={language === 'ru' ? '–û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ...' : 'Describe what happened...'}
                  className="w-full h-32 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 resize-none"
                />
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ */}
              <div className="flex gap-3 pt-4">
                <button
                  onClick={handleSubmit}
                  disabled={isGettingLocation}
                  className="flex-1 bg-red-600 hover:bg-red-700 disabled:bg-gray-400 text-white font-medium py-2 px-4 rounded-lg transition-colors"
                >
                  {isGettingLocation ? (language === 'ru' ? '–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç...' : 'Getting coordinates...') : 'SOS'}
                </button>
                <button
                  onClick={handleCancel}
                  className="flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 font-medium py-2 px-4 rounded-lg transition-colors"
                >
                  {language === 'ru' ? '–û—Ç–º–µ–Ω–∞' : 'Cancel'}
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 