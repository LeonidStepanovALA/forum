'use client';

import React, { useState, useEffect } from 'react';
import Image from 'next/image';
import QRCode from 'qrcode';
import { StarIcon, MapPinIcon, CalendarIcon, ClockIcon, CurrencyDollarIcon, EyeIcon } from '@heroicons/react/24/solid';
import { useLanguage } from '@/hooks/useLanguage';
import { translations } from '@/translations';
import RouteMap from './RouteMap';

interface SearchResult {
  id: number;
  type: string;
  title: string;
  description: string;
  image: string;
  price: number;
  duration: string;
  difficulty: string;
  startPoint: string;
  endPoint: string;
  startDate: string;
  endDate: string;
  rating: number;
  reviews: number;
  ecoRating: number;
  guide?: {
    name: string;
    rating: number;
    experience: string;
    languages: string[];
    avatar: string;
  };
  status?: 'confirmed' | 'pending' | 'available';
  confirmationDate?: string | null;
  maxParticipants?: number;
  currentParticipants?: number;
  transport?: string;
  accommodation?: string;
  meals?: string;
  highlights?: string[];
}

interface SearchResultsProps {
  results: SearchResult[];
  searchQuery?: string;
}

export default function SearchResults({ results, searchQuery }: SearchResultsProps) {
  const { language } = useLanguage();
  const t = translations[language];
  const [selectedTour, setSelectedTour] = useState<number | null>(null);
  const [confirmedTours, setConfirmedTours] = useState<Set<number>>(new Set([1, 4])); // –¢—É—Ä—ã 1 –∏ 4 —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã
  const [pendingConfirmations, setPendingConfirmations] = useState<Set<number>>(new Set([2, 5])); // –¢—É—Ä—ã 2 –∏ 5 –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  const [bookedTours, setBookedTours] = useState<Set<number>>(new Set()); // –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã
  const [selectedCompetingTours, setSelectedCompetingTours] = useState<Set<number>>(new Set()); // –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏–µ —Ç—É—Ä—ã
  const [timelineFilter, setTimelineFilter] = useState<'all' | 'confirmed' | 'pending' | 'available' | 'booked'>('all');

  console.log('üéØ SearchResults —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è:', { 
    results: results.length, 
    searchQuery, 
    selectedTour,
    resultsIds: results.map(r => r.id),
    confirmedTours: Array.from(confirmedTours),
    pendingConfirmations: Array.from(pendingConfirmations),
    timelineFilter
  });

  // –ü–µ—Ä–µ–º–µ—â–∞–µ–º mockResults –≤–Ω—É—Ç—Ä—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const mockResults: SearchResult[] = [
    {
      id: 1,
      type: 'tour',
      title: language === 'ru' ? '–≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –ê–ª–º–∞—Ç—ã ‚Üí –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞ (–í–∞—Ä–∏–∞–Ω—Ç –ê)' : 'Almaty ‚Üí Cholpon-Ata Expedition (Option A)',
      description: language === 'ru' ? '–ü—è—Ç–∏–¥–Ω–µ–≤–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –æ—Ç –≥–æ—Ä –ê–ª–º–∞—Ç—ã –¥–æ –±–µ—Ä–µ–≥–æ–≤ –ò—Å—Å—ã–∫-–ö—É–ª—å —Å –ø–æ—Å–µ—â–µ–Ω–∏–µ–º –¥—Ä–µ–≤–Ω–∏—Ö –ø–∞–º—è—Ç–Ω–∏–∫–æ–≤ –∏ –ø—Ä–∏—Ä–æ–¥–Ω—ã—Ö –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π' : 'Five-day journey from Almaty mountains to Issyk-Kul shores with visits to ancient monuments and natural attractions',
      image: '/next.svg',
      price: 85000,
      rating: 4.9,
      reviews: 24,
      ecoRating: 4.9,
      startPoint: '–ê–ª–º–∞—Ç—ã',
      endPoint: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞',
      startDate: '2024-08-15',
      endDate: '2024-08-19',
      duration: '5 –¥–Ω–µ–π',
      difficulty: '–°—Ä–µ–¥–Ω—è—è',
      guide: {
        name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
        rating: 4.8,
        experience: '8 –ª–µ—Ç',
        languages: ['–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'],
        avatar: '/next.svg'
      },
      status: 'confirmed',
      confirmationDate: '2024-08-10',
      maxParticipants: 12,
      currentParticipants: 8,
      transport: '–ú–∏–∫—Ä–æ–∞–≤—Ç–æ–±—É—Å',
      accommodation: '–û—Ç–µ–ª–∏ –∏ –≥–æ—Å—Ç–µ–≤—ã–µ –¥–æ–º–∞',
      meals: '–ü–æ–ª—É–ø–∞–Ω—Å–∏–æ–Ω',
      highlights: [
        '–ü–µ—Ä–µ–≤–∞–ª –¢—é–µ-–ê—à—É—É',
        '–û–∑–µ—Ä–æ –ò—Å—Å—ã–∫-–ö—É–ª—å',
        '–ü–µ—Ç—Ä–æ–≥–ª–∏—Ñ—ã –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞',
        '–ì–æ—Ä—è—á–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏',
        '–≠—Ç–Ω–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –º—É–∑–µ–π'
      ]
    },
    {
      id: 2,
      type: 'tour',
      title: language === 'ru' ? '–≠–∫—Å–ø–µ–¥–∏—Ü–∏—è –ê–ª–º–∞—Ç—ã ‚Üí –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞ (–í–∞—Ä–∏–∞–Ω—Ç –ë)' : 'Almaty ‚Üí Cholpon-Ata Expedition (Option B)',
      description: language === 'ru' ? '–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—è—Ç–∏–¥–Ω–µ–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞' : 'Alternative five-day route focusing on active recreation and extreme sports',
      image: '/next.svg',
      price: 95000,
      rating: 4.7,
      reviews: 18,
      ecoRating: 4.6,
      startPoint: '–ê–ª–º–∞—Ç—ã',
      endPoint: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞',
      startDate: '2024-08-15',
      endDate: '2024-08-19',
      duration: '5 –¥–Ω–µ–π',
      difficulty: '–°–ª–æ–∂–Ω–∞—è',
      guide: {
        name: '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤',
        rating: 4.7,
        experience: '12 –ª–µ—Ç',
        languages: ['–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ù–µ–º–µ—Ü–∫–∏–π'],
        avatar: '/next.svg'
      },
      status: 'pending',
      confirmationDate: null,
      maxParticipants: 8,
      currentParticipants: 6,
      transport: '–í–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫–∏',
      accommodation: '–ü–∞–ª–∞—Ç–∫–∏ –∏ –≥–æ—Ä–Ω—ã–µ –ø—Ä–∏—é—Ç—ã',
      meals: '–ü–æ–ª–µ–≤–∞—è –∫—É—Ö–Ω—è',
      highlights: [
        '–¢—Ä–µ–∫–∫–∏–Ω–≥ –≤ –≥–æ—Ä–∞—Ö –¢—è–Ω—å-–®–∞–Ω—å',
        '–†–∞—Ñ—Ç–∏–Ω–≥ –ø–æ —Ä–µ–∫–µ –ß—É',
        '–°–∫–∞–ª–æ–ª–∞–∑–∞–Ω–∏–µ',
        '–ü–∞—Ä–∞–ø–ª–∞–Ω–µ—Ä–∏–∑–º',
        '–ù–æ—á–ª–µ–≥ –≤ —é—Ä—Ç–∞—Ö'
      ]
    },
    {
      id: 3,
      type: 'tour',
      title: language === 'ru' ? '–ö—É–ª—å—Ç—É—Ä–Ω—ã–π —Ç—É—Ä –ê–ª–º–∞—Ç—ã ‚Üí –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞ (–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π)' : 'Cultural Tour Almaty ‚Üí Cholpon-Ata (Classic)',
      description: language === 'ru' ? '–¢—Ä–µ—Ö–¥–Ω–µ–≤–Ω—ã–π –∫—É–ª—å—Ç—É—Ä–Ω—ã–π —Ç—É—Ä —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é –∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ —Ä–µ–≥–∏–æ–Ω–∞, –≤–∫–ª—é—á–∞—è –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã –∏ –¥–µ–≥—É—Å—Ç–∞—Ü–∏–∏' : 'Three-day cultural tour focusing on regional history and traditions, including workshops and tastings',
      image: '/next.svg',
      price: 65000,
      rating: 4.7,
      reviews: 18,
      ecoRating: 4.7,
      startPoint: '–ê–ª–º–∞—Ç—ã',
      endPoint: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞',
      startDate: '2024-08-20',
      endDate: '2024-08-22',
      duration: '3 –¥–Ω—è',
      difficulty: '–õ–µ–≥–∫–∞—è',
      guide: {
        name: '–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞',
        rating: 4.9,
        experience: '5 –ª–µ—Ç',
        languages: ['–†—É—Å—Å–∫–∏–π', '–ö—ã—Ä–≥—ã–∑—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'],
        avatar: '/next.svg'
      },
      status: 'pending',
      confirmationDate: null,
      maxParticipants: 8,
      currentParticipants: 6,
      transport: '–ö–æ–º—Ñ–æ—Ä—Ç–∞–±–µ–ª—å–Ω—ã–π –∞–≤—Ç–æ–±—É—Å',
      accommodation: '–û—Ç–µ–ª–∏ 3-4 –∑–≤–µ–∑–¥—ã',
      meals: '–ü–æ–ª–Ω—ã–π –ø–∞–Ω—Å–∏–æ–Ω',
      highlights: [
        '–ú—É–∑–µ–π –Ω–∞—Ä–æ–¥–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤',
        '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –≤–æ–π–ª–æ–∫—É',
        '–î–µ–≥—É—Å—Ç–∞—Ü–∏—è –∫—É–º—ã—Å–∞',
        '–§–æ–ª—å–∫–ª–æ—Ä–Ω—ã–π –≤–µ—á–µ—Ä',
        '–ü–æ—Å–µ—â–µ–Ω–∏–µ —Ä–µ–º–µ—Å–ª–µ–Ω–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä—Å–∫–∏—Ö'
      ]
    },
    {
      id: 4,
      type: 'tour',
      title: language === 'ru' ? '–ö—É–ª—å—Ç—É—Ä–Ω—ã–π —Ç—É—Ä –ê–ª–º–∞—Ç—ã ‚Üí –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞ (–ü—Ä–µ–º–∏—É–º)' : 'Cultural Tour Almaty ‚Üí Cholpon-Ata (Premium)',
      description: language === 'ru' ? '–ü—Ä–µ–º–∏—É–º –≤–µ—Ä—Å–∏—è –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ —Ç—É—Ä–∞ —Å VIP-–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º, —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º–∏ —ç–∫—Å–∫—É—Ä—Å–∏—è–º–∏ –∏ –¥–µ–≥—É—Å—Ç–∞—Ü–∏—è–º–∏' : 'Premium version of cultural tour with VIP service, exclusive excursions and tastings',
      image: '/next.svg',
      price: 120000,
      rating: 4.9,
      reviews: 12,
      ecoRating: 4.8,
      startPoint: '–ê–ª–º–∞—Ç—ã',
      endPoint: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞',
      startDate: '2024-08-20',
      endDate: '2024-08-22',
      duration: '3 –¥–Ω—è',
      difficulty: '–õ–µ–≥–∫–∞—è',
      guide: {
        name: '–ï–ª–µ–Ω–∞ –°–æ–∫–æ–ª–æ–≤–∞',
        rating: 4.8,
        experience: '6 –ª–µ—Ç',
        languages: ['–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π'],
        avatar: '/next.svg'
      },
      status: 'available',
      confirmationDate: null,
      maxParticipants: 4,
      currentParticipants: 2,
      transport: '–õ–∏–º—É–∑–∏–Ω',
      accommodation: '–û—Ç–µ–ª–∏ 5 –∑–≤–µ–∑–¥',
      meals: '–ü–æ–ª–Ω—ã–π –ø–∞–Ω—Å–∏–æ–Ω + –≤–∏–Ω–æ',
      highlights: [
        '–ü—Ä–∏–≤–∞—Ç–Ω—ã–µ —ç–∫—Å–∫—É—Ä—Å–∏–∏',
        'VIP-–¥–µ–≥—É—Å—Ç–∞—Ü–∏–∏',
        '–í—Å—Ç—Ä–µ—á–∞ —Å –º–µ—Å—Ç–Ω—ã–º–∏ –º–∞—Å—Ç–µ—Ä–∞–º–∏',
        '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã',
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ'
      ]
    },
    {
      id: 5,
      type: 'tour',
      title: language === 'ru' ? '–≠–∫–æ-—Ç—É—Ä –ê–ª–º–∞—Ç—ã ‚Üí –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞ (–°—Ç–∞–Ω–¥–∞—Ä—Ç)' : 'Eco Tour Almaty ‚Üí Cholpon-Ata (Standard)',
      description: language === 'ru' ? '–ß–µ—Ç—ã—Ä–µ—Ö–¥–Ω–µ–≤–Ω—ã–π —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç—É—Ä —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥—ã –∏ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ' : 'Four-day ecological tour focusing on nature conservation and environmental education',
      image: '/next.svg',
      price: 75000,
      rating: 4.6,
      reviews: 15,
      ecoRating: 4.9,
      startPoint: '–ê–ª–º–∞—Ç—ã',
      endPoint: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞',
      startDate: '2024-09-05',
      endDate: '2024-09-08',
      duration: '4 –¥–Ω—è',
      difficulty: '–õ–µ–≥–∫–∞—è',
      guide: {
        name: '–ê—Ä—Ö–µ–æ–ª–æ–≥ –ò–≤–∞–Ω –ú–µ–¥–≤–µ–¥–µ–≤',
        rating: 4.9,
        experience: '15 –ª–µ—Ç',
        languages: ['–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ö–∏—Ç–∞–π—Å–∫–∏–π'],
        avatar: '/next.svg'
      },
      status: 'confirmed',
      confirmationDate: '2024-08-28',
      maxParticipants: 10,
      currentParticipants: 7,
      transport: '–≠–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å',
      accommodation: '–≠–∫–æ-–æ—Ç–µ–ª–∏',
      meals: '–í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ –ø–∏—Ç–∞–Ω–∏–µ',
      highlights: [
        '–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫',
        '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–µ',
        '–ü–æ—Å–∞–¥–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤',
        '–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è',
        '–í—Å—Ç—Ä–µ—á–∞ —Å –º–µ—Å—Ç–Ω—ã–º–∏ —ç–∫–æ–ª–æ–≥–∞–º–∏'
      ]
    },
    {
      id: 6,
      type: 'tour',
      title: language === 'ru' ? '–≠–∫–æ-—Ç—É—Ä –ê–ª–º–∞—Ç—ã ‚Üí –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞ (–ò–Ω—Ç–µ–Ω—Å–∏–≤)' : 'Eco Tour Almaty ‚Üí Cholpon-Ata (Intensive)',
      description: language === 'ru' ? '–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç—É—Ä —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ–º –≤ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –∏—Ö —Ä–µ—à–µ–Ω–∏—è' : 'Intensive ecological tour with deep immersion into environmental issues and their solutions',
      image: '/next.svg',
      price: 95000,
      rating: 4.8,
      reviews: 8,
      ecoRating: 5.0,
      startPoint: '–ê–ª–º–∞—Ç—ã',
      endPoint: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞',
      startDate: '2024-09-05',
      endDate: '2024-09-08',
      duration: '4 –¥–Ω—è',
      difficulty: '–°—Ä–µ–¥–Ω—è—è',
      guide: {
        name: '–§–æ—Ç–æ–≥—Ä–∞—Ñ –ê–Ω–Ω–∞ –ö–ª–∏–º–æ–≤–∞',
        rating: 4.8,
        experience: '10 –ª–µ—Ç',
        languages: ['–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π', '–ò—Å–ø–∞–Ω—Å–∫–∏–π'],
        avatar: '/next.svg'
      },
      status: 'available',
      confirmationDate: null,
      maxParticipants: 6,
      currentParticipants: 3,
      transport: '–í–µ–ª–æ—Å–∏–ø–µ–¥—ã + —ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª—å',
      accommodation: '–≠–∫–æ-–¥–æ–º–∏–∫–∏',
      meals: '–°—Ç—Ä–æ–≥–æ –≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–æ–µ + –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–æ–µ',
      highlights: [
        '–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥',
        '–£—á–∞—Å—Ç–∏–µ –≤ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö',
        '–í–æ–ª–æ–Ω—Ç–µ—Ä—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞',
        '–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞',
        '–°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞'
      ]
    }
  ];

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–æ—Å—Ç–∏–Ω–∏—Ü/–æ—Ç–µ–ª–µ–π
  const mockHotels = [
    {
      id: 101,
      name: '–≠–∫–æ-–æ—Ç–µ–ª—å "–ó–µ–ª–µ–Ω—ã–µ –≥–æ—Ä—ã"',
      location: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞, —É–ª. –û–∑–µ—Ä–Ω–∞—è, 15',
      description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–∫–æ-–æ—Ç–µ–ª—å —Å –≤–∏–¥–æ–º –Ω–∞ –æ–∑–µ—Ä–æ –ò—Å—Å—ã–∫-–ö—É–ª—å. –í—Å–µ –Ω–æ–º–µ—Ä–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω—ã —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏.',
      priceRange: '15 000 - 25 000 ‚Ç∏',
      rating: 4.8,
      ecoRating: 4.9,
      reviews: 156,
      amenities: ['Wi-Fi', '–ü–∞—Ä–∫–æ–≤–∫–∞', '–†–µ—Å—Ç–æ—Ä–∞–Ω', '–°–ø–∞', '–≠–∫–æ-–º–∞—Ç–µ—Ä–∏–∞–ª—ã']
    },
    {
      id: 102,
      name: '–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ "–û–∑–µ—Ä–Ω—ã–π –±–µ—Ä–µ–≥"',
      location: '–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞, —É–ª. –ü–ª—è–∂–Ω–∞—è, 8',
      description: '–£—é—Ç–Ω–∞—è –≥–æ—Å—Ç–∏–Ω–∏—Ü–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞ —Å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–ª—è–∂–µ–º –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–º –º–µ—Å—Ç–Ω–æ–π –∫—É—Ö–Ω–∏.',
      priceRange: '12 000 - 20 000 ‚Ç∏',
      rating: 4.6,
      ecoRating: 4.7,
      reviews: 89,
      amenities: ['Wi-Fi', '–ü–ª—è–∂', '–†–µ—Å—Ç–æ—Ä–∞–Ω', '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä', '–≠–∫—Å–∫—É—Ä—Å–∏–∏']
    }
  ];

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ—Ç–µ–ª–µ–π
  const [selectedHotels, setSelectedHotels] = useState<Set<number>>(new Set());
  const [fadingHotels, setFadingHotels] = useState<Set<number>>(new Set());
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ—Ç–µ–ª–µ–π –ø–æ –¥–∞—Ç–∞–º
  const [selectedHotelsByDate, setSelectedHotelsByDate] = useState<{ [key: string]: number }>({});
  
  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–æ–≤
  const [bookingStatus, setBookingStatus] = useState<{ [key: number]: 'available' | 'booking' | 'waiting' | 'confirmed' }>({});
  const [bookingTimers, setBookingTimers] = useState<{ [key: number]: NodeJS.Timeout }>({});
  const [hotelBookingStatus, setHotelBookingStatus] = useState<{ [key: number]: 'available' | 'booking' | 'checkin' }>({});
  const [hotelBookingTimers, setHotelBookingTimers] = useState<{ [key: number]: NodeJS.Timeout }>({});
  const [hotelQRCodes, setHotelQRCodes] = useState<{ [key: number]: string }>({});
  const [showQRModal, setShowQRModal] = useState<{ [key: number]: boolean }>({});

  // –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–æ–≤ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    return () => {
      Object.values(bookingTimers).forEach(timer => {
        if (timer) clearTimeout(timer);
      });
      Object.values(hotelBookingTimers).forEach(timer => {
        if (timer) clearTimeout(timer);
      });
    };
  }, [bookingTimers, hotelBookingTimers]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–µ–ª—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  const handleSelectHotelWithAnimation = (hotelId: number, date: string) => {
    // –ï—Å–ª–∏ –æ—Ç–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–Ω –¥–ª—è —ç—Ç–æ–π –¥–∞—Ç—ã, –æ—Ç–º–µ–Ω—è–µ–º –≤—ã–±–æ—Ä
    if (selectedHotelsByDate[date] === hotelId) {
      setSelectedHotelsByDate(prev => {
        const newState = { ...prev };
        delete newState[date];
        return newState;
      });
      return;
    }

    // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤—ã–±–æ—Ä –¥–ª—è —ç—Ç–æ–π –¥–∞—Ç—ã
    const previousSelection = selectedHotelsByDate[date];
    if (previousSelection) {
      setFadingHotels(prev => new Set([...prev, previousSelection]));
      setTimeout(() => {
        setFadingHotels(prev => {
          const newSet = new Set(prev);
          newSet.delete(previousSelection);
          return newSet;
        });
      }, 300);
    }

    // –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –æ—Ç–µ–ª—å –¥–ª—è —ç—Ç–æ–π –¥–∞—Ç—ã
    setSelectedHotelsByDate(prev => ({
      ...prev,
      [date]: hotelId
    }));

    // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞
    setFadingHotels(prev => new Set([...prev, hotelId]));
    setTimeout(() => {
      setFadingHotels(prev => {
        const newSet = new Set(prev);
        newSet.delete(hotelId);
        return newSet;
      });
    }, 300);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –¥–æ–ª–∂–µ–Ω –ª–∏ –æ—Ç–µ–ª—å –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
  const shouldShowHotel = (hotelId: number, date: string) => {
    const selectedForDate = selectedHotelsByDate[date];
    return !selectedForDate || selectedForDate === hotelId;
  };

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º mockResults –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö —Ç—É—Ä–æ–≤
  const displayResults = mockResults;

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString(language === 'ru' ? 'ru-RU' : 'en-US', {
      day: 'numeric',
      month: 'short',
      year: 'numeric'
    });
  };

  const formatPrice = (price: number) => {
    return price.toLocaleString(language === 'ru' ? 'ru-RU' : 'en-US', {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0,
    });
  };

  const handleGuideConfirmation = (tourId: number) => {
    console.log('‚úÖ –ì–∏–¥ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —Ç—É—Ä:', tourId);
    setConfirmedTours(prev => new Set([...prev, tourId]));
    setPendingConfirmations(prev => {
      const newSet = new Set(prev);
      newSet.delete(tourId);
      return newSet;
    });
  };

  const handleStartTour = (tourId: number) => {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç—É—Ä:', tourId);
    alert(`–¢—É—Ä ${tourId} –Ω–∞—á–∞–ª—Å—è! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ!`);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç—É—Ä–∞
  const handleBookTour = (tourId: number) => {
    if (bookingStatus[tourId] === 'waiting' || bookingStatus[tourId] === 'confirmed') {
      return;
    }
    
    console.log('üé´ –ë—Ä–æ–Ω–∏—Ä—É–µ–º —Ç—É—Ä:', tourId);
    
    setBookingStatus(prev => ({
      ...prev,
      [tourId]: 'booking'
    }));
    
    // –ß–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É –º–µ–Ω—è–µ–º –Ω–∞ "–ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
    setTimeout(() => {
      console.log('‚è≥ –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —Ç—É—Ä–∞:', tourId);
      setBookingStatus(prev => ({
        ...prev,
        [tourId]: 'waiting'
      }));
      
      // –ß–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Ç—É—Ä
      const timer = setTimeout(() => {
        console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Ç—É—Ä:', tourId);
        setBookingStatus(prev => ({
          ...prev,
          [tourId]: 'confirmed'
        }));
        setConfirmedTours(prev => new Set([...prev, tourId]));
        
        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä
        setBookingTimers(prev => {
          const newTimers = { ...prev };
          delete newTimers[tourId];
          return newTimers;
        });
      }, 4000); // 4 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
      
      setBookingTimers(prev => ({
        ...prev,
        [tourId]: timer
      }));
    }, 1000); // 1 —Å–µ–∫—É–Ω–¥–∞ –¥–ª—è "–ë—Ä–æ–Ω–∏—Ä—É–µ–º..."
  };

  const handleBookHotel = (hotelId: number) => {
    if (hotelBookingStatus[hotelId] === 'checkin') {
      return;
    }
    setHotelBookingStatus(prev => ({
      ...prev,
      [hotelId]: 'booking'
    }));
    setTimeout(() => {
      setHotelBookingStatus(prev => ({
        ...prev,
        [hotelId]: 'checkin'
      }));
      setHotelBookingTimers(prev => {
        const newTimers = { ...prev };
        delete newTimers[hotelId];
        return newTimers;
      });
    }, 3000); // 3 seconds for check-in
  };

  const generateHotelQR = async (hotelId: number) => {
    try {
      const hotel = mockHotels.find(h => h.id === hotelId);
      if (!hotel) return;

      const qrData = {
        hotelId: hotelId,
        hotelName: hotel.name,
        checkInTime: new Date().toISOString(),
        bookingId: `BK-${hotelId}-${Date.now()}`,
        guestInfo: {
          name: '–¢—É—Ä–∏—Å—Ç',
          phone: '+7 XXX XXX XX XX'
        }
      };

      const qrCodeDataURL = await QRCode.toDataURL(JSON.stringify(qrData), {
        width: 200,
        margin: 2,
        color: {
          dark: '#000000',
          light: '#FFFFFF'
        }
      });

      setHotelQRCodes(prev => ({
        ...prev,
        [hotelId]: qrCodeDataURL
      }));
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:', error);
    }
  };

  const showQRCode = (hotelId: number) => {
    if (!hotelQRCodes[hotelId]) {
      generateHotelQR(hotelId);
    }
    setShowQRModal(prev => ({
      ...prev,
      [hotelId]: true
    }));
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –¥–æ–ª–∂–µ–Ω –ª–∏ —Ç—É—Ä –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è
  const shouldShowTour = (tour: SearchResult) => {
    // –ï—Å–ª–∏ —Ç—É—Ä –≤—ã–±—Ä–∞–Ω –≤ –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–µ–π –≥—Ä—É–ø–ø–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
    if (selectedCompetingTours.has(tour.id)) {
      return true;
    }
    
    // –ï—Å–ª–∏ —Ç—É—Ä –Ω–µ –≤ –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–µ–π –≥—Ä—É–ø–ø–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ
    if (![1, 2, 3, 4, 5, 6].includes(tour.id)) {
      return true;
    }
    
    // –î–ª—è –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏—Ö —Ç—É—Ä–æ–≤: –µ—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ –≥—Ä—É–ø–ø—ã –Ω–µ –≤—ã–±—Ä–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π
    if ([1, 2].includes(tour.id)) {
      const hasSelectedFromGroup = selectedCompetingTours.has(1) || selectedCompetingTours.has(2);
      return !hasSelectedFromGroup || selectedCompetingTours.has(tour.id);
    }
    if ([3, 4].includes(tour.id)) {
      const hasSelectedFromGroup = selectedCompetingTours.has(3) || selectedCompetingTours.has(4);
      return !hasSelectedFromGroup || selectedCompetingTours.has(tour.id);
    }
    if ([5, 6].includes(tour.id)) {
      const hasSelectedFromGroup = selectedCompetingTours.has(5) || selectedCompetingTours.has(6);
      return !hasSelectedFromGroup || selectedCompetingTours.has(tour.id);
    }
    
    return true;
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
  const [fadingTours, setFadingTours] = useState<Set<number>>(new Set());

  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–µ–≥–æ —Ç—É—Ä–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
  const handleSelectCompetingTourWithAnimation = (tourId: number) => {
    console.log('üèÜ –í—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏–π —Ç—É—Ä:', tourId);
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≥—Ä—É–ø–ø—É –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏—Ö —Ç—É—Ä–æ–≤
    let competingGroup: number[] = [];
    if ([1, 2].includes(tourId)) {
      competingGroup = [1, 2]; // –≠–∫—Å–ø–µ–¥–∏—Ü–∏–∏
    } else if ([3, 4].includes(tourId)) {
      competingGroup = [3, 4]; // –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ —Ç—É—Ä—ã
    } else if ([5, 6].includes(tourId)) {
      competingGroup = [5, 6]; // –≠–∫–æ-—Ç—É—Ä—ã
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç—É—Ä—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    const toursToFade = competingGroup.filter(id => id !== tourId);
    setFadingTours(prev => new Set([...prev, ...toursToFade]));
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    setTimeout(() => {
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç—É—Ä—ã –∏–∑ –≥—Ä—É–ø–ø—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
      setSelectedCompetingTours(prev => {
        const newSet = new Set(prev);
        competingGroup.forEach(id => newSet.delete(id));
        newSet.add(tourId);
        return newSet;
      });
      
      // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
      setFadingTours(new Set());
    }, 300); // 300ms –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏
  };

  const getTourStatus = (tourId: number) => {
    if (confirmedTours.has(tourId)) {
      return 'confirmed';
    } else if (pendingConfirmations.has(tourId)) {
      return 'pending';
    } else if (bookedTours.has(tourId)) {
      return 'booked';
    } else {
      return 'available';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'confirmed':
        return 'text-green-600 bg-green-50 border-green-200';
      case 'pending':
        return 'text-yellow-600 bg-yellow-50 border-yellow-200';
      case 'available':
        return 'text-blue-600 bg-blue-50 border-blue-200';
      case 'booked':
        return 'text-purple-600 bg-purple-50 border-purple-200';
      default:
        return 'text-gray-600 bg-gray-50 border-gray-200';
    }
  };

  const getDifficultyColor = (difficulty: string) => {
    switch (difficulty.toLowerCase()) {
      case '–ª–µ–≥–∫–∞—è':
      case 'easy':
        return 'bg-green-100 text-green-800';
      case '—Å—Ä–µ–¥–Ω—è—è':
      case 'medium':
        return 'bg-yellow-100 text-yellow-800';
      case '—Å–ª–æ–∂–Ω–∞—è':
      case 'hard':
        return 'bg-orange-100 text-orange-800';
      case '—ç–∫—Å–ø–µ—Ä—Ç':
      case 'expert':
        return 'bg-red-100 text-red-800';
      default:
        return 'bg-gray-100 text-gray-800';
    }
  };

  const getStatusText = (status: string) => {
    switch (status) {
      case 'confirmed':
        return '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≥–∏–¥–æ–º';
      case 'pending':
        return '‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è';
      case 'available':
        return 'üìã –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è';
      case 'booked':
        return 'üé´ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω';
      default:
        return '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å';
    }
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–∞–π–º–ª–∞–π–Ω–∞
  const TimelineView = ({ tours }: { tours: SearchResult[] }) => {
    const sortedTours = [...tours].sort((a, b) => new Date(a.startDate).getTime() - new Date(b.startDate).getTime());
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏—Ö —Ç—É—Ä–æ–≤
    const groupCompetingTours = (tours: SearchResult[]) => {
      const grouped: { [key: string]: SearchResult[] } = {};
      
      tours.forEach(tour => {
        let groupKey = '';
        if ([1, 2].includes(tour.id)) {
          groupKey = '2024-08-15'; // –≠–∫—Å–ø–µ–¥–∏—Ü–∏–∏
        } else if ([3, 4].includes(tour.id)) {
          groupKey = '2024-08-20'; // –ö—É–ª—å—Ç—É—Ä–Ω—ã–µ —Ç—É—Ä—ã
        } else if ([5, 6].includes(tour.id)) {
          groupKey = '2024-09-05'; // –≠–∫–æ-—Ç—É—Ä—ã
        } else {
          groupKey = tour.startDate; // –û–±—ã—á–Ω—ã–µ —Ç—É—Ä—ã
        }
        
        if (!grouped[groupKey]) {
          grouped[groupKey] = [];
        }
        grouped[groupKey].push(tour);
      });
      
      return grouped;
    };
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–∞—Ç –æ—Ç–µ–ª–µ–π (–Ω–∞ –¥–µ–Ω—å —Ä–∞–Ω—å—à–µ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—É—Ä–∞)
    const getHotelDates = (tourDates: string[]) => {
      const hotelDates: { [key: string]: string } = {};
      
      tourDates.forEach((tourDate, index) => {
        const currentDate = new Date(tourDate);
        const previousDate = new Date(currentDate);
        previousDate.setDate(previousDate.getDate() - 1);
        
        const hotelDate = previousDate.toISOString().split('T')[0];
        hotelDates[tourDate] = hotelDate;
      });
      
      return hotelDates;
    };
    
    const groupedTours = groupCompetingTours(sortedTours);
    const timelineDates = Object.keys(groupedTours).sort();
    const hotelDates = getHotelDates(timelineDates);
    
    return (
      <div className="col-span-full mb-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-gray-800">üóìÔ∏è –¢–∞–π–º–ª–∞–π–Ω —Ç—É—Ä–æ–≤ –∏ –æ—Ç–µ–ª–µ–π –ø–æ –º–∞—Ä—à—Ä—É—Ç—É –ê–ª–º–∞—Ç—ã ‚Üí –ß–æ–ª–ø–æ–Ω-–ê—Ç–∞</h3>
          
          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <div className="flex gap-2">
            {[
              { key: 'all', label: '–í—Å–µ', color: 'gray' },
              { key: 'confirmed', label: '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ', color: 'green' },
              { key: 'pending', label: '–û–∂–∏–¥–∞—é—â–∏–µ', color: 'yellow' },
              { key: 'available', label: '–î–æ—Å—Ç—É–ø–Ω—ã–µ', color: 'blue' },
              { key: 'booked', label: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ', color: 'purple' }
            ].map(filter => (
              <button
                key={filter.key}
                onClick={() => setTimelineFilter(filter.key as any)}
                className={`px-3 py-1 text-xs rounded-full border transition-colors ${
                  timelineFilter === filter.key
                    ? `bg-${filter.color}-100 text-${filter.color}-700 border-${filter.color}-300`
                    : `bg-white text-gray-600 border-gray-300 hover:bg-gray-50`
                }`}
              >
                {filter.label}
              </button>
            ))}
          </div>
        </div>
        
        <div className="relative">
          {/* –í—Ä–µ–º–µ–Ω–Ω–∞—è –ª–∏–Ω–∏—è */}
          <div className="absolute left-4 top-0 bottom-0 w-0.5 bg-blue-200"></div>
          
          <div className="space-y-6">
            {timelineDates.map((date, dateIndex) => {
              const toursForDate = groupedTours[date];
              const filteredToursForDate = toursForDate.filter(tour => {
                if (timelineFilter === 'all') return shouldShowTour(tour);
                return getTourStatus(tour.id) === timelineFilter && shouldShowTour(tour);
              });
              
              if (filteredToursForDate.length === 0) return null;
              
              const hotelDate = hotelDates[date];
              
              return (
                <div key={date} className="relative">
                  {/* –û—Ç–µ–ª–∏ –Ω–∞ –¥–µ–Ω—å —Ä–∞–Ω—å—à–µ */}
                  {dateIndex > 0 && (
                    <div className="relative mb-6">
                      {/* –¢–æ—á–∫–∞ –Ω–∞ —Ç–∞–π–º–ª–∞–π–Ω–µ –¥–ª—è –æ—Ç–µ–ª–µ–π */}
                      <div className="absolute left-2 w-4 h-4 rounded-full border-2 border-white shadow-sm bg-green-500 flex items-center justify-center">
                        {selectedHotelsByDate[hotelDate] && (
                          <span className="text-white text-xs">‚úÖ</span>
                        )}
                      </div>
                      
                      {/* –î–∞—Ç–∞ –æ—Ç–µ–ª–µ–π */}
                      <div className="ml-8 mb-3">
                        <div className="text-sm font-medium text-gray-700">
                          üè® –†–∞–∑–º–µ—â–µ–Ω–∏–µ –¥–ª—è {formatDate(hotelDate)}
                        </div>
                      </div>
                      
                      {/* –û—Ç–µ–ª–∏ */}
                      <div className="ml-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                        {mockHotels.filter(hotel => shouldShowHotel(hotel.id, hotelDate)).map((hotel) => (
                          <div 
                            key={hotel.id} 
                            className={`bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-all duration-300 ease-in-out ${
                              fadingHotels.has(hotel.id) 
                                ? 'opacity-0 transform scale-95 -translate-y-2' 
                                : 'opacity-100 transform scale-100 translate-y-0'
                            }`}
                          >
                            <div className="flex items-start justify-between">
                              <div className="flex-1">
                                <div className="flex items-center gap-2 mb-2">
                                  <h4 className="font-semibold text-gray-900">{hotel.name}</h4>
                                </div>
                                
                                <div className="grid grid-cols-2 gap-4 text-sm text-gray-600 mb-3">
                                  <div>
                                    <span className="font-medium">–¶–µ–Ω–∞:</span>
                                    <div className="text-green-600 font-semibold">{hotel.priceRange}</div>
                                  </div>
                                  <div>
                                    <span className="font-medium">–†–µ–π—Ç–∏–Ω–≥:</span>
                                    <div>‚≠ê {hotel.rating}</div>
                                  </div>
                                  <div>
                                    <span className="font-medium">–≠–∫–æ-—Ä–µ–π—Ç–∏–Ω–≥:</span>
                                    <div>üå± {hotel.ecoRating}</div>
                                  </div>
                                  <div>
                                    <span className="font-medium">–û—Ç–∑—ã–≤—ã:</span>
                                    <div>{hotel.reviews}</div>
                                  </div>
                                </div>
                                
                                <div className="text-sm text-gray-600 mb-3">
                                  <div className="font-medium mb-1">üìç {hotel.location}</div>
                                  <div className="text-gray-500">{hotel.description}</div>
                                </div>
                                
                                <div className="flex flex-wrap gap-1 mb-3">
                                  {hotel.amenities.map((amenity, index) => (
                                    <span key={index} className="px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded">
                                      {amenity}
                                    </span>
                                  ))}
                                </div>
                              </div>
                              
                              <div className="flex flex-col gap-2">
                                {/* –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É */}
                                {[101, 102].includes(hotel.id) && (
                                  <button 
                                    onClick={() => handleSelectHotelWithAnimation(hotel.id, hotelDate)}
                                    className={`px-2 py-1 text-xs font-medium rounded-full transition-colors duration-200 ${
                                      selectedHotelsByDate[hotelDate] === hotel.id
                                        ? 'bg-orange-500 text-white border border-orange-600'
                                        : 'bg-orange-100 text-orange-700 border border-orange-300 hover:bg-orange-200'
                                    }`}
                                  >
                                    {selectedHotelsByDate[hotelDate] === hotel.id ? '‚úÖ –í—ã–±—Ä–∞–Ω–æ' : 'üè® –í—ã–±—Ä–∞—Ç—å'}
                                  </button>
                                )}
                                
                                {/* –û—Å—Ç–∞–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π –≤—ã–±–æ—Ä–∞ */}
                                {(!hotelBookingStatus[hotel.id] || hotelBookingStatus[hotel.id] === 'available') && (
                                  <button 
                                    onClick={() => handleBookHotel(hotel.id)}
                                    className="px-3 py-1 text-xs font-medium bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors duration-200"
                                  >
                                    üè® –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
                                  </button>
                                )}
                                
                                {hotelBookingStatus[hotel.id] === 'booking' && (
                                  <button 
                                    className="px-3 py-1 text-xs font-medium bg-yellow-500 text-white rounded transition-colors duration-200"
                                    disabled
                                  >
                                    ‚è≥ –ë—Ä–æ–Ω–∏—Ä—É–µ–º...
                                  </button>
                                )}
                                
                                {hotelBookingStatus[hotel.id] === 'checkin' && (
                                  <button 
                                    onClick={() => showQRCode(hotel.id)}
                                    className="px-3 py-1 text-xs font-medium bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200"
                                  >
                                    ‚úÖ Check-in
                                  </button>
                                )}
                                
                                <button 
                                  className="px-3 py-1 text-xs font-medium border border-blue-300 text-blue-600 rounded hover:bg-blue-50 transition-colors duration-200"
                                >
                                  ‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                                </button>
                              </div>
                            </div>
                          </div>
                        ))}
                      </div>
                    </div>
                  )}
                  
                  {/* –î–∞—Ç–∞ —Ç—É—Ä–æ–≤ */}
                  <div className="ml-8 mb-3">
                    <div className="text-sm font-medium text-gray-700">
                      üéØ {formatDate(date)}
                    </div>
                  </div>
                  
                  {/* –ö–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏–µ —Ç—É—Ä—ã –≤ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ */}
                  <div className="ml-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {filteredToursForDate.map((tour, tourIndex) => (
                      <div key={tour.id} className="relative">
                        {/* –ì–∞–ª–æ—á–∫–∞ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ –Ω–∞–ø—Ä–æ—Ç–∏–≤ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
                        {bookingStatus[tour.id] === 'confirmed' && (
                          <div className="absolute -left-6 top-1/2 transform -translate-y-1/2 z-10">
                            <div className="w-6 h-6 rounded-full bg-green-500 flex items-center justify-center shadow-lg">
                              <span className="text-white text-xs">‚úÖ</span>
                            </div>
                          </div>
                        )}
                        
                        <div 
                          className={`bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-all duration-300 ease-in-out ${
                            fadingTours.has(tour.id) 
                              ? 'opacity-0 transform scale-95 -translate-y-2' 
                              : 'opacity-100 transform scale-100 translate-y-0'
                          }`}
                        >
                          <div className="flex items-start justify-between">
                            <div className="flex-1 pr-6">
                              <div className="flex items-center gap-2 mb-2">
                                <h4 className="font-semibold text-gray-900">{tour.title}</h4>
                              </div>
                              
                              <div className="grid grid-cols-2 gap-x-6 gap-y-4 text-sm text-gray-600 mb-4">
                                <div className="space-y-1">
                                  <div className="font-medium text-xs text-gray-500">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</div>
                                  <div className="text-sm">{tour.duration}</div>
                                </div>
                                <div className="space-y-1">
                                  <div className="font-medium text-xs text-gray-500">–¶–µ–Ω–∞:</div>
                                  <div className="text-sm text-green-600 font-semibold">{formatPrice(tour.price)} ‚Ç∏</div>
                                </div>
                                <div className="space-y-1">
                                  <div className="font-medium text-xs text-gray-500">–£—á–∞—Å—Ç–Ω–∏–∫–∏:</div>
                                  <div className="text-sm">{tour.currentParticipants}/{tour.maxParticipants}</div>
                                </div>
                                <div className="space-y-1">
                                  <div className="font-medium text-xs text-gray-500">–†–µ–π—Ç–∏–Ω–≥:</div>
                                  <div className="text-sm">‚≠ê {tour.rating}</div>
                                </div>
                              </div>
                              
                              {tour.guide && (
                                <div className="flex items-center gap-2 text-sm text-gray-600 mb-3">
                                  <img 
                                    src={tour.guide.avatar} 
                                    alt={tour.guide.name}
                                    className="w-6 h-6 rounded-full"
                                  />
                                  <span>–ì–∏–¥: {tour.guide.name}</span>
                                  <span>‚≠ê {tour.guide.rating}</span>
                                </div>
                              )}
                            </div>
                            
                            <div className="flex flex-col gap-3 min-w-fit">
                              {/* –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É */}
                              {[1, 2].includes(tour.id) && (
                                <button 
                                  onClick={() => handleSelectCompetingTourWithAnimation(tour.id)}
                                  className={`px-2 py-1 text-xs font-medium rounded-full transition-colors duration-200 ${
                                    selectedCompetingTours.has(tour.id)
                                      ? 'bg-orange-500 text-white border border-orange-600'
                                      : 'bg-orange-100 text-orange-700 border border-orange-300 hover:bg-orange-200'
                                  }`}
                                >
                                  {selectedCompetingTours.has(tour.id) ? '‚úÖ –í—ã–±—Ä–∞–Ω–æ' : 'üéØ –í—ã–±—Ä–∞—Ç—å'}
                                </button>
                              )}
                              {[3, 4].includes(tour.id) && (
                                <button 
                                  onClick={() => handleSelectCompetingTourWithAnimation(tour.id)}
                                  className={`px-2 py-1 text-xs font-medium rounded-full transition-colors duration-200 ${
                                    selectedCompetingTours.has(tour.id)
                                      ? 'bg-purple-500 text-white border border-purple-600'
                                      : 'bg-purple-100 text-purple-700 border border-purple-300 hover:bg-purple-200'
                                  }`}
                                >
                                  {selectedCompetingTours.has(tour.id) ? '‚úÖ –í—ã–±—Ä–∞–Ω–æ' : 'üéØ –í—ã–±—Ä–∞—Ç—å'}
                                </button>
                              )}
                              {[5, 6].includes(tour.id) && (
                                <button 
                                  onClick={() => handleSelectCompetingTourWithAnimation(tour.id)}
                                  className={`px-2 py-1 text-xs font-medium rounded-full transition-colors duration-200 ${
                                    selectedCompetingTours.has(tour.id)
                                      ? 'bg-green-500 text-white border border-green-600'
                                      : 'bg-green-100 text-green-700 border border-green-300 hover:bg-green-200'
                                  }`}
                                >
                                  {selectedCompetingTours.has(tour.id) ? '‚úÖ –í—ã–±—Ä–∞–Ω–æ' : 'üéØ –í—ã–±—Ä–∞—Ç—å'}
                                </button>
                              )}
                              
                              {/* –ö–Ω–æ–ø–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è/—Å—Ç–∞—Ç—É—Å–∞ */}
                              {(!bookingStatus[tour.id] || bookingStatus[tour.id] === 'available') && (
                                <button 
                                  onClick={() => handleBookTour(tour.id)}
                                  className="px-3 py-1 text-xs font-medium bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors duration-200"
                                >
                                  üìÖ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
                                </button>
                              )}
                              
                              {bookingStatus[tour.id] === 'booking' && (
                                <button 
                                  className="px-3 py-1 text-xs font-medium bg-yellow-500 text-white rounded transition-colors duration-200"
                                  disabled
                                >
                                  ‚è≥ –ë—Ä–æ–Ω–∏—Ä—É–µ–º...
                                </button>
                              )}
                              
                              {bookingStatus[tour.id] === 'waiting' && (
                                <button 
                                  className="px-3 py-1 text-xs font-medium bg-purple-600 text-white rounded transition-colors duration-200"
                                  disabled
                                >
                                  üé´ –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                                </button>
                              )}
                              
                              {bookingStatus[tour.id] === 'confirmed' && (
                                <button 
                                  onClick={() => handleStartTour(tour.id)}
                                  className="px-3 py-1 text-xs font-medium bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200"
                                >
                                  üöÄ –ù–∞—á–∞—Ç—å —Ç—É—Ä
                                </button>
                              )}
                              
                              {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                              <div className="mt-4 pt-3 border-t border-gray-100">
                                <div className="flex items-center justify-between text-xs text-gray-500">
                                  <span>üå± –≠–∫–æ-—Ä–µ–π—Ç–∏–Ω–≥: {tour.ecoRating}</span>
                                  <span>‚≠ê {tour.rating} ({tour.reviews} –æ—Ç–∑—ã–≤–æ–≤)</span>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              );
            })}
          </div>
          
          {timelineDates.every(date => {
            const toursForDate = groupedTours[date];
            const filteredToursForDate = toursForDate.filter(tour => {
              if (timelineFilter === 'all') return shouldShowTour(tour);
              return getTourStatus(tour.id) === timelineFilter && shouldShowTour(tour);
            });
            return filteredToursForDate.length === 0;
          }) && (
            <div className="ml-8 p-4 text-center text-gray-500">
              –ù–µ—Ç —Ç—É—Ä–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º
            </div>
          )}
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ" */}
        <div className="mt-8 text-center">
          <button 
            onClick={() => {
              console.log('üéØ –ù–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...');
              
              // –ë—Ä–æ–Ω–∏—Ä—É–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—É—Ä—ã —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
              const availableTours = displayResults.filter(tour => 
                !bookingStatus[tour.id] || bookingStatus[tour.id] === 'available'
              );
              
              availableTours.forEach((tour, index) => {
                setTimeout(() => {
                  console.log(`üé´ –ë—Ä–æ–Ω–∏—Ä—É–µ–º —Ç—É—Ä ${tour.id} (${index + 1}/${availableTours.length})`);
                  handleBookTour(tour.id);
                }, index * 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ 500–º—Å –º–µ–∂–¥—É –∫–∞–∂–¥—ã–º —Ç—É—Ä–æ–º
              });
              
              // –ë—Ä–æ–Ω–∏—Ä—É–µ–º –≤—Å–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
              const selectedHotels = Object.entries(selectedHotelsByDate).filter(([date, hotelId]) => 
                !hotelBookingStatus[hotelId] || hotelBookingStatus[hotelId] === 'available'
              );
              
              selectedHotels.forEach(([date, hotelId], index) => {
                setTimeout(() => {
                  console.log(`üè® –ë—Ä–æ–Ω–∏—Ä—É–µ–º –æ—Ç–µ–ª—å ${hotelId} (${index + 1}/${selectedHotels.length})`);
                  handleBookHotel(hotelId);
                }, (availableTours.length + index) * 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –≤—Å–µ—Ö —Ç—É—Ä–æ–≤
              });
              
              const totalItems = availableTours.length + selectedHotels.length;
              console.log(`üìä –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: ${totalItems}`);
              
              // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
              setTimeout(() => {
                alert(`üéâ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!\n\n–¢—É—Ä—ã: ${availableTours.length}\n–û—Ç–µ–ª–∏: ${selectedHotels.length}\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.`);
              }, 1000);
            }}
            className="px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-lg shadow-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-300 transform hover:scale-105"
          >
            üéØ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ç—É—Ä—ã –∏ –æ—Ç–µ–ª–∏
          </button>
          <p className="text-sm text-gray-500 mt-2">
            –ë—Ä–æ–Ω–∏—Ä—É–µ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç—É—Ä—ã –∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç–µ–ª–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
          </p>
        </div>
      </div>
    );
  };

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
      <div className="flex items-center justify-between">
        <h3 className="text-xl font-semibold text-gray-800">
          –ù–∞–π–¥–µ–Ω–æ —Ç—É—Ä–æ–≤: {displayResults.length}
        </h3>
        {searchQuery && (
          <div className="text-sm text-gray-600">
            –ü–æ –∑–∞–ø—Ä–æ—Å—É: "{searchQuery}"
          </div>
        )}
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ */}
        <div className="col-span-full p-2 bg-gray-100 rounded text-xs">
          üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ: selectedTour = {selectedTour}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ = {displayResults.length}
          <br />
          ‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Ç—É—Ä—ã: {Array.from(confirmedTours).join(', ')}
          <br />
          ‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {Array.from(pendingConfirmations).join(', ')}
          <br />
          üé´ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç—É—Ä—ã: {Array.from(bookedTours).join(', ')}
          <br />
          üèÜ –í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏–µ —Ç—É—Ä—ã: {Array.from(selectedCompetingTours).join(', ')}
          <br />
          üìä –í—Å–µ–≥–æ —Ç—É—Ä–æ–≤ –≤ mockResults: {mockResults.length}
          <br />
          üÜî ID —Ç—É—Ä–æ–≤: {displayResults.map(r => r.id).join(', ')}
        </div>
        
        {/* –¢–∞–π–º–ª–∞–π–Ω —Ç—É—Ä–æ–≤ */}
        <TimelineView tours={displayResults} />
        
        {/* –ö–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
        {selectedTour && (
          <div className="col-span-full">
            <RouteMap 
              startPoint="–ê–ª–º–∞—Ç—ã"
              endPoint="–ß–æ–ª–ø–æ–Ω-–ê—Ç–∞"
              waypoints={[
                { id: '1', name: '–ë–∏—à–∫–µ–∫', description: '–°—Ç–æ–ª–∏—Ü–∞ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω–∞', coordinates: [42.8746, 74.5698], type: 'waypoint' },
                { id: '2', name: '–ë–∞–ª—ã–∫—á–∏', description: '–ì–æ—Ä–æ–¥ –Ω–∞ –±–µ—Ä–µ–≥—É –æ–∑–µ—Ä–∞', coordinates: [42.4608, 76.1872], type: 'waypoint' }
              ]}
              startDate="2024-08-15"
              endDate="2024-08-20"
              duration="5 –¥–Ω–µ–π"
            />
          </div>
        )}
        
        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        {selectedTour !== null && (
          <div className="col-span-full border-t border-gray-200 p-2 bg-red-50 text-xs text-red-700">
            üîç –û—Ç–ª–∞–¥–∫–∞: selectedTour = {selectedTour}
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è QR-–∫–æ–¥–æ–≤ –æ—Ç–µ–ª–µ–π */}
      {Object.entries(showQRModal).map(([hotelId, isVisible]) => {
        if (!isVisible) return null;
        const hotel = mockHotels.find(h => h.id === parseInt(hotelId));
        const qrCode = hotelQRCodes[parseInt(hotelId)];
        
        return (
          <div key={hotelId} className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div className="bg-white rounded-lg p-6 max-w-md w-full mx-4">
              <div className="flex items-center justify-between mb-4">
                <h3 className="text-lg font-semibold text-gray-900">
                  QR-–∫–æ–¥ –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è
                </h3>
                <button
                  onClick={() => setShowQRModal(prev => ({ ...prev, [hotelId]: false }))}
                  className="text-gray-400 hover:text-gray-600"
                >
                  ‚úï
                </button>
              </div>
              
              {hotel && (
                <div className="text-center">
                  <h4 className="text-md font-medium text-gray-800 mb-2">
                    {hotel.name}
                  </h4>
                  <p className="text-sm text-gray-600 mb-4">
                    –ü—Ä–µ–¥—ä—è–≤–∏—Ç–µ —ç—Ç–æ—Ç QR-–∫–æ–¥ –Ω–∞ —Ä–µ—Å–µ–ø—à–µ–Ω–µ
                  </p>
                  
                  {qrCode ? (
                    <div className="flex flex-col items-center">
                      <img 
                        src={qrCode} 
                        alt="QR-–∫–æ–¥ –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è" 
                        className="w-48 h-48 border-2 border-gray-200 rounded-lg"
                      />
                      <p className="text-xs text-gray-500 mt-2">
                        –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {new Date().toLocaleString('ru-RU')}
                      </p>
                    </div>
                  ) : (
                    <div className="flex items-center justify-center h-48">
                      <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                      <span className="ml-2 text-gray-600">–ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR-–∫–æ–¥–∞...</span>
                    </div>
                  )}
                  
                  <div className="mt-4 text-xs text-gray-500">
                    <p>‚Ä¢ QR-–∫–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏</p>
                    <p>‚Ä¢ –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –æ—Ç–µ–ª—è</p>
                    <p>‚Ä¢ –ü–æ–∫–∞–∂–∏—Ç–µ –Ω–∞ —Ä–µ—Å–µ–ø—à–µ–Ω–µ –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è</p>
                  </div>
                </div>
              )}
            </div>
          </div>
        );
      })}
    </div>
  );
} 