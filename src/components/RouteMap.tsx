'use client';

import React, { useState } from 'react';
import { MapPinIcon, ArrowRightIcon, CalendarIcon, ClockIcon } from '@heroicons/react/24/outline';

interface RoutePoint {
  id: string;
  name: string;
  coordinates: [number, number];
  arrivalTime?: string;
  departureTime?: string;
  description?: string;
  type: 'start' | 'waypoint' | 'end';
}

interface RouteMapProps {
  startPoint: string;
  endPoint: string;
  waypoints?: RoutePoint[];
  startDate: string;
  endDate: string;
  duration: string;
}

export default function RouteMap({ 
  startPoint, 
  endPoint, 
  waypoints = [], 
  startDate, 
  endDate, 
  duration 
}: RouteMapProps) {
  const [selectedPoint, setSelectedPoint] = useState<string | null>(null);

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU', {
      day: 'numeric',
      month: 'short',
      year: 'numeric'
    });
  };

  const getPointIcon = (type: string) => {
    switch (type) {
      case 'start':
        return 'üü¢';
      case 'end':
        return 'üî¥';
      case 'waypoint':
        return 'üü°';
      default:
        return 'üìç';
    }
  };

  const getPointColor = (type: string) => {
    switch (type) {
      case 'start':
        return 'border-green-500 bg-green-50';
      case 'end':
        return 'border-red-500 bg-red-50';
      case 'waypoint':
        return 'border-yellow-500 bg-yellow-50';
      default:
        return 'border-gray-500 bg-gray-50';
    }
  };

  return (
    <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
      <div className="flex items-center gap-2 mb-4">
        <MapPinIcon className="w-5 h-5 text-blue-500" />
        <h3 className="text-lg font-semibold text-gray-800">–ú–∞—Ä—à—Ä—É—Ç —Ç—É—Ä–∞</h3>
      </div>

      {/* –î–∞—Ç—ã –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
        <div className="flex items-center gap-2 p-3 bg-blue-50 rounded-lg">
          <CalendarIcon className="w-4 h-4 text-blue-500" />
          <div>
            <div className="text-xs text-gray-500">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</div>
            <div className="text-sm font-medium">{formatDate(startDate)}</div>
          </div>
        </div>
        
        <div className="flex items-center gap-2 p-3 bg-green-50 rounded-lg">
          <CalendarIcon className="w-4 h-4 text-green-500" />
          <div>
            <div className="text-xs text-gray-500">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</div>
            <div className="text-sm font-medium">{formatDate(endDate)}</div>
          </div>
        </div>
        
        <div className="flex items-center gap-2 p-3 bg-purple-50 rounded-lg">
          <ClockIcon className="w-4 h-4 text-purple-500" />
          <div>
            <div className="text-xs text-gray-500">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</div>
            <div className="text-sm font-medium">{duration}</div>
          </div>
        </div>
      </div>

      {/* –ö–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ */}
      <div className="relative">
        {/* –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∫–∞—Ä—Ç—ã */}
        <div className="bg-gray-100 rounded-lg h-64 mb-4 flex items-center justify-center">
          <div className="text-center">
            <div className="text-4xl mb-2">üó∫Ô∏è</div>
            <div className="text-gray-600">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞</div>
            <div className="text-sm text-gray-500">–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–∞—Ä—Ç–∞ —Å –º–∞—Ä—à—Ä—É—Ç–æ–º</div>
          </div>
        </div>

        {/* –¢–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞ */}
        <div className="space-y-3">
          {/* –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ */}
          <div 
            className={`flex items-center gap-3 p-3 rounded-lg border-2 cursor-pointer transition-colors ${getPointColor('start')} ${selectedPoint === 'start' ? 'ring-2 ring-blue-300' : ''}`}
            onClick={() => setSelectedPoint(selectedPoint === 'start' ? null : 'start')}
          >
            <div className="text-2xl">{getPointIcon('start')}</div>
            <div className="flex-1">
              <div className="font-medium text-gray-800">{startPoint}</div>
              <div className="text-sm text-gray-600">–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞</div>
            </div>
            <ArrowRightIcon className="w-4 h-4 text-gray-400" />
          </div>

          {/* –ü—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ç–æ—á–∫–∏ */}
          {waypoints.map((point) => (
            <div 
              key={point.id}
              className={`flex items-center gap-3 p-3 rounded-lg border-2 cursor-pointer transition-colors ${getPointColor(point.type)} ${selectedPoint === point.id ? 'ring-2 ring-blue-300' : ''}`}
              onClick={() => setSelectedPoint(selectedPoint === point.id ? null : point.id)}
            >
              <div className="text-2xl">{getPointIcon(point.type)}</div>
              <div className="flex-1">
                <div className="font-medium text-gray-800">{point.name}</div>
                <div className="text-sm text-gray-600">{point.description}</div>
                {point.arrivalTime && (
                  <div className="text-xs text-gray-500">
                    –ü—Ä–∏–±—ã—Ç–∏–µ: {point.arrivalTime}
                  </div>
                )}
              </div>
              <ArrowRightIcon className="w-4 h-4 text-gray-400" />
            </div>
          ))}

          {/* –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ */}
          <div 
            className={`flex items-center gap-3 p-3 rounded-lg border-2 cursor-pointer transition-colors ${getPointColor('end')} ${selectedPoint === 'end' ? 'ring-2 ring-blue-300' : ''}`}
            onClick={() => setSelectedPoint(selectedPoint === 'end' ? null : 'end')}
          >
            <div className="text-2xl">{getPointIcon('end')}</div>
            <div className="flex-1">
              <div className="font-medium text-gray-800">{endPoint}</div>
              <div className="text-sm text-gray-600">–ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞</div>
            </div>
          </div>
        </div>

        {/* –î–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–æ—á–∫–∏ */}
        {selectedPoint && (
          <div className="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <h4 className="font-medium text-gray-800 mb-2">–î–µ—Ç–∞–ª–∏ —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞</h4>
            <div className="text-sm text-gray-600">
              {selectedPoint === 'start' && (
                <div>
                  <p><strong>–ú–µ—Å—Ç–æ:</strong> {startPoint}</p>
                  <p><strong>–¢–∏–ø:</strong> –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞</p>
                  <p><strong>–î–∞—Ç–∞:</strong> {formatDate(startDate)}</p>
                  <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> –ú–µ—Å—Ç–æ —Å–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –∏ –Ω–∞—á–∞–ª–∞ —Ç—É—Ä–∞</p>
                </div>
              )}
              {selectedPoint === 'end' && (
                <div>
                  <p><strong>–ú–µ—Å—Ç–æ:</strong> {endPoint}</p>
                  <p><strong>–¢–∏–ø:</strong> –ö–æ–Ω–µ—á–Ω–∞—è —Ç–æ—á–∫–∞</p>
                  <p><strong>–î–∞—Ç–∞:</strong> {formatDate(endDate)}</p>
                  <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> –ú–µ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç—É—Ä–∞</p>
                </div>
              )}
              {waypoints.find(p => p.id === selectedPoint) && (
                <div>
                  <p><strong>–ú–µ—Å—Ç–æ:</strong> {waypoints.find(p => p.id === selectedPoint)?.name}</p>
                  <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {waypoints.find(p => p.id === selectedPoint)?.description}</p>
                  {waypoints.find(p => p.id === selectedPoint)?.arrivalTime && (
                    <p><strong>–ü—Ä–∏–±—ã—Ç–∏–µ:</strong> {waypoints.find(p => p.id === selectedPoint)?.arrivalTime}</p>
                  )}
                </div>
              )}
            </div>
          </div>
        )}
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ */}
      <div className="mt-6 p-4 bg-gray-50 rounded-lg">
        <h4 className="font-medium text-gray-800 mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–µ</h4>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <div className="text-gray-600">–¢–∏–ø —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:</div>
            <div className="font-medium">–≠–∫–æ-—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç (—ç–ª–µ–∫—Ç—Ä–æ–º–æ–±–∏–ª–∏, –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã)</div>
          </div>
          <div>
            <div className="text-gray-600">–í–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å:</div>
            <div className="font-medium">–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –æ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–æ –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏</div>
          </div>
        </div>
      </div>
    </div>
  );
}
